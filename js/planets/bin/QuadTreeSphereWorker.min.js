var THREE={Math:{clamp:function(x,a,b){return x<a?a:x>b?b:x}}};THREE.Vector3=function(x,y,z){this.x=x||0;this.y=y||0;this.z=z||0};THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(x,y,z){this.x=x;this.y=y;this.z=z;return this},setX:function(x){this.x=x;return this},setY:function(y){this.y=y;return this},setZ:function(z){this.z=z;return this},setComponent:function(index,value){switch(index){case 0:this.x=value;break;case 1:this.y=value;break;case 2:this.z=value;break;default:throw new Error("index is out of range: "+index)}},getComponent:function(index){switch(index){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+index)}},copy:function(v){this.x=v.x;this.y=v.y;this.z=v.z;return this},add:function(v,w){if(w!==undefined){console.warn("DEPRECATED: Vector3's .add() now only accepts one argument. Use .addVectors( a, b ) instead.");return this.addVectors(v,w)}this.x+=v.x;this.y+=v.y;this.z+=v.z;return this},addScalar:function(s){this.x+=s;this.y+=s;this.z+=s;return this},addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;return this},sub:function(v,w){if(w!==undefined){console.warn("DEPRECATED: Vector3's .sub() now only accepts one argument. Use .subVectors( a, b ) instead.");return this.subVectors(v,w)}this.x-=v.x;this.y-=v.y;this.z-=v.z;return this},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;return this},multiply:function(v,w){if(w!==undefined){console.warn("DEPRECATED: Vector3's .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.");return this.multiplyVectors(v,w)}this.x*=v.x;this.y*=v.y;this.z*=v.z;return this},multiplyScalar:function(scalar){this.x*=scalar;this.y*=scalar;this.z*=scalar;return this},multiplyVectors:function(a,b){this.x=a.x*b.x;this.y=a.y*b.y;this.z=a.z*b.z;return this},applyEuler:function(){var quaternion;return function(euler){if(euler instanceof THREE.Euler===false){console.error("ERROR: Vector3's .applyEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code.")}if(quaternion===undefined)quaternion=new THREE.Quaternion;this.applyQuaternion(quaternion.setFromEuler(euler));return this}}(),applyAxisAngle:function(){var quaternion;return function(axis,angle){if(quaternion===undefined)quaternion=new THREE.Quaternion;this.applyQuaternion(quaternion.setFromAxisAngle(axis,angle));return this}}(),applyMatrix3:function(m){var x=this.x;var y=this.y;var z=this.z;var e=m.elements;this.x=e[0]*x+e[3]*y+e[6]*z;this.y=e[1]*x+e[4]*y+e[7]*z;this.z=e[2]*x+e[5]*y+e[8]*z;return this},applyMatrix4:function(m){var x=this.x,y=this.y,z=this.z;var e=m.elements;this.x=e[0]*x+e[4]*y+e[8]*z+e[12];this.y=e[1]*x+e[5]*y+e[9]*z+e[13];this.z=e[2]*x+e[6]*y+e[10]*z+e[14];return this},applyProjection:function(m){var x=this.x,y=this.y,z=this.z;var e=m.elements;var d=1/(e[3]*x+e[7]*y+e[11]*z+e[15]);this.x=(e[0]*x+e[4]*y+e[8]*z+e[12])*d;this.y=(e[1]*x+e[5]*y+e[9]*z+e[13])*d;this.z=(e[2]*x+e[6]*y+e[10]*z+e[14])*d;return this},applyQuaternion:function(q){var x=this.x;var y=this.y;var z=this.z;var qx=q.x;var qy=q.y;var qz=q.z;var qw=q.w;var ix=qw*x+qy*z-qz*y;var iy=qw*y+qz*x-qx*z;var iz=qw*z+qx*y-qy*x;var iw=-qx*x-qy*y-qz*z;this.x=ix*qw+iw*-qx+iy*-qz-iz*-qy;this.y=iy*qw+iw*-qy+iz*-qx-ix*-qz;this.z=iz*qw+iw*-qz+ix*-qy-iy*-qx;return this},transformDirection:function(m){var x=this.x,y=this.y,z=this.z;var e=m.elements;this.x=e[0]*x+e[4]*y+e[8]*z;this.y=e[1]*x+e[5]*y+e[9]*z;this.z=e[2]*x+e[6]*y+e[10]*z;this.normalize();return this},divide:function(v){this.x/=v.x;this.y/=v.y;this.z/=v.z;return this},divideScalar:function(scalar){if(scalar!==0){var invScalar=1/scalar;this.x*=invScalar;this.y*=invScalar;this.z*=invScalar}else{this.x=0;this.y=0;this.z=0}return this},min:function(v){if(this.x>v.x){this.x=v.x}if(this.y>v.y){this.y=v.y}if(this.z>v.z){this.z=v.z}return this},max:function(v){if(this.x<v.x){this.x=v.x}if(this.y<v.y){this.y=v.y}if(this.z<v.z){this.z=v.z}return this},clamp:function(min,max){if(this.x<min.x){this.x=min.x}else if(this.x>max.x){this.x=max.x}if(this.y<min.y){this.y=min.y}else if(this.y>max.y){this.y=max.y}if(this.z<min.z){this.z=min.z}else if(this.z>max.z){this.z=max.z}return this},clampScalar:function(){var min,max;return function(minVal,maxVal){if(min===undefined){min=new THREE.Vector3;max=new THREE.Vector3}min.set(minVal,minVal,minVal);max.set(maxVal,maxVal,maxVal);return this.clamp(min,max)}}(),floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);this.z=Math.floor(this.z);return this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);return this},roundToZero:function(){this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x);this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y);this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(v){return this.x*v.x+this.y*v.y+this.z*v.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(l){var oldLength=this.length();if(oldLength!==0&&l!==oldLength){this.multiplyScalar(l/oldLength)}return this},lerp:function(v,alpha){this.x+=(v.x-this.x)*alpha;this.y+=(v.y-this.y)*alpha;this.z+=(v.z-this.z)*alpha;return this},cross:function(v,w){if(w!==undefined){console.warn("DEPRECATED: Vector3's .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.");return this.crossVectors(v,w)}var x=this.x,y=this.y,z=this.z;this.x=y*v.z-z*v.y;this.y=z*v.x-x*v.z;this.z=x*v.y-y*v.x;return this},crossVectors:function(a,b){var ax=a.x,ay=a.y,az=a.z;var bx=b.x,by=b.y,bz=b.z;this.x=ay*bz-az*by;this.y=az*bx-ax*bz;this.z=ax*by-ay*bx;return this},projectOnVector:function(){var v1,dot;return function(vector){if(v1===undefined)v1=new THREE.Vector3;v1.copy(vector).normalize();dot=this.dot(v1);return this.copy(v1).multiplyScalar(dot)}}(),projectOnPlane:function(){var v1;return function(planeNormal){if(v1===undefined)v1=new THREE.Vector3;v1.copy(this).projectOnVector(planeNormal);return this.sub(v1)}}(),reflect:function(){var v1;return function(normal){if(v1===undefined)v1=new THREE.Vector3;return this.sub(v1.copy(normal).multiplyScalar(2*this.dot(normal)))}}(),angleTo:function(v){var theta=this.dot(v)/(this.length()*v.length());return Math.acos(THREE.Math.clamp(theta,-1,1))},distanceTo:function(v){return Math.sqrt(this.distanceToSquared(v))},distanceToSquared:function(v){var dx=this.x-v.x;var dy=this.y-v.y;var dz=this.z-v.z;return dx*dx+dy*dy+dz*dz},setEulerFromRotationMatrix:function(m,order){console.error("REMOVED: Vector3's setEulerFromRotationMatrix has been removed in favor of Euler.setFromRotationMatrix(), please update your code.")},setEulerFromQuaternion:function(q,order){console.error("REMOVED: Vector3's setEulerFromQuaternion: has been removed in favor of Euler.setFromQuaternion(), please update your code.")},getPositionFromMatrix:function(m){console.warn("DEPRECATED: Vector3's .getPositionFromMatrix() has been renamed to .setFromMatrixPosition(). Please update your code.");return this.setFromMatrixPosition(m)},getScaleFromMatrix:function(m){console.warn("DEPRECATED: Vector3's .getScaleFromMatrix() has been renamed to .setFromMatrixScale(). Please update your code.");return this.setFromMatrixScale(m)},getColumnFromMatrix:function(index,matrix){console.warn("DEPRECATED: Vector3's .getColumnFromMatrix() has been renamed to .setFromMatrixColumn(). Please update your code.");return this.setFromMatrixColumn(index,matrix)},setFromMatrixPosition:function(m){this.x=m.elements[12];this.y=m.elements[13];this.z=m.elements[14];return this},setFromMatrixScale:function(m){var sx=this.set(m.elements[0],m.elements[1],m.elements[2]).length();var sy=this.set(m.elements[4],m.elements[5],m.elements[6]).length();var sz=this.set(m.elements[8],m.elements[9],m.elements[10]).length();this.x=sx;this.y=sy;this.z=sz;return this},setFromMatrixColumn:function(index,matrix){var offset=index*4;var me=matrix.elements;this.x=me[offset];this.y=me[offset+1];this.z=me[offset+2];return this},equals:function(v){return v.x===this.x&&v.y===this.y&&v.z===this.z},fromArray:function(array){this.x=array[0];this.y=array[1];this.z=array[2];return this},toArray:function(){return[this.x,this.y,this.z]},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)}};THREE.Vector2=function(x,y){this.x=x||0;this.y=y||0};THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(x,y){this.x=x;this.y=y;return this},setX:function(x){this.x=x;return this},setY:function(y){this.y=y;return this},setComponent:function(index,value){switch(index){case 0:this.x=value;break;case 1:this.y=value;break;default:throw new Error("index is out of range: "+index)}},getComponent:function(index){switch(index){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+index)}},copy:function(v){this.x=v.x;this.y=v.y;return this},add:function(v,w){if(w!==undefined){console.warn("DEPRECATED: Vector2's .add() now only accepts one argument. Use .addVectors( a, b ) instead.");return this.addVectors(v,w)}this.x+=v.x;this.y+=v.y;return this},addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;return this},addScalar:function(s){this.x+=s;this.y+=s;return this},sub:function(v,w){if(w!==undefined){console.warn("DEPRECATED: Vector2's .sub() now only accepts one argument. Use .subVectors( a, b ) instead.");return this.subVectors(v,w)}this.x-=v.x;this.y-=v.y;return this},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;return this},multiplyScalar:function(s){this.x*=s;this.y*=s;return this},divideScalar:function(scalar){if(scalar!==0){var invScalar=1/scalar;this.x*=invScalar;this.y*=invScalar}else{this.x=0;this.y=0}return this},min:function(v){if(this.x>v.x){this.x=v.x}if(this.y>v.y){this.y=v.y}return this},max:function(v){if(this.x<v.x){this.x=v.x}if(this.y<v.y){this.y=v.y}return this},clamp:function(min,max){if(this.x<min.x){this.x=min.x}else if(this.x>max.x){this.x=max.x}if(this.y<min.y){this.y=min.y}else if(this.y>max.y){this.y=max.y}return this},clampScalar:function(){var min,max;return function(minVal,maxVal){if(min===undefined){min=new THREE.Vector2;max=new THREE.Vector2}min.set(minVal,minVal);max.set(maxVal,maxVal);return this.clamp(min,max)}}(),floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);return this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);return this},roundToZero:function(){this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x);this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(v){return this.x*v.x+this.y*v.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(v){return Math.sqrt(this.distanceToSquared(v))},distanceToSquared:function(v){var dx=this.x-v.x,dy=this.y-v.y;return dx*dx+dy*dy},setLength:function(l){var oldLength=this.length();if(oldLength!==0&&l!==oldLength){this.multiplyScalar(l/oldLength)}return this},lerp:function(v,alpha){this.x+=(v.x-this.x)*alpha;this.y+=(v.y-this.y)*alpha;return this},equals:function(v){return v.x===this.x&&v.y===this.y},fromArray:function(array){this.x=array[0];this.y=array[1];return this},toArray:function(){return[this.x,this.y]},clone:function(){return new THREE.Vector2(this.x,this.y)}};THREE.TreeNode=function(options){this.level=options.level;this.parent=options.parent;this.tree=options.tree;this.position=options.position;this.width=this.tree.planet.radius*2/Math.pow(2,this.level);this.halfWidth=this.width/2;this.arcLength=this.width/this.tree.planet.radius;this.center=this.FindCenter();this.name=this.center.x+":"+this.center.y+":"+this.center.z;this.isSplit=false;this.isDrawn=false;this.isOccluded=false};THREE.TreeNode.prototype={update:function(){if(this.OccludedByHorizon()){if(this.isDrawn){this.isOccluded=true;this.UnDraw()}}else{this.isOccluded=false;if(this.InCameraFrustum()){this.GetDistanceFromCamera();if(this.isSplit){if(this.ShouldUnSplit()){this.UnSplit();this.update()}else{this.updateChildren()}}else if(this.ShouldSplit()){if(this.isDrawn){this.UnDraw()}this.Split();this.updateChildren()}}}},checkNeighbors:function(){if(this.topNeighbor&&this.topNeighbor.isSplit&&(this.topNeighbor.bottomLeftChild.isSplit||this.topNeighbor.bottomRightChild.isSplit)){this.Split()}if(this.rightNeighbor&&this.rightNeighbor.isSplit&&(this.rightNeighbor.bottomLeftChild.isSplit||this.rightNeighbor.topLeftChild.isSplit)){this.Split()}if(this.bottomNeighbor&&this.bottomNeighbor.isSplit&&(this.bottomNeighbor.topLeftChild.isSplit||this.bottomNeighbor.topRightChild.isSplit)){this.Split()}if(this.leftNeighbor&&this.leftNeighbor.isSplit&&(this.leftNeighbor.topRightChild.isSplit||this.leftNeighbor.bottomRightChild.isSplit)){this.Split()}if(this.isSplit){if(this.topNeighbor&&this.topNeighbor.isSplit){this.topLeftChild.topNeighbor=this.topNeighbor.bottomLeftChild;this.topRightChild.topNeighbor=this.topNeighbor.bottomRightChild}if(this.rightNeighbor&&this.rightNeighbor.isSplit){this.topRightChild.rightNeighbor=this.rightNeighbor.topLeftChild;this.bottomRightChild.rightNeighbor=this.rightNeighbor.bottomLeftChild}if(this.bottomNeighbor&&this.bottomNeighbor.isSplit){this.bottomLeftChild.bottomNeighbor=this.bottomNeighbor.topLeftChild;this.bottomRightChild.bottomNeighbor=this.bottomNeighbor.topRightChild}if(this.leftNeighbor&&this.leftNeighbor.isSplit){this.topLeftChild.leftNeighbor=this.leftNeighbor.topRightChild;this.bottomLeftChild.leftNeighbor=this.leftNeighbor.bottomRightChild}this.topLeftChild.rightNeighbor=this.topRightChild;this.topLeftChild.bottomNeighbor=this.bottomLeftChild;this.topRightChild.bottomNeighbor=this.bottomRightChild;this.topRightChild.leftNeighbor=this.topLeftChild;this.bottomLeftChild.topNeighbor=this.topLeftChild;this.bottomLeftChild.rightNeighbor=this.bottomRightChild;this.bottomRightChild.topNeighbor=this.topRightChild;this.bottomRightChild.leftNeighbor=this.bottomLeftChild;if(!this.leftNeighbor||this.leftNeighbor&&!this.leftNeighbor.isSplit){this.topLeftChild.checkNeighbors();this.topRightChild.checkNeighbors();this.bottomLeftChild.checkNeighbors();this.bottomRightChild.checkNeighbors()}}},Draw:function(){var position;return function(){"use strict";if(this.isSplit){this.topLeftChild.Draw();this.topRightChild.Draw();this.bottomLeftChild.Draw();this.bottomRightChild.Draw();return}if(this.isDrawn||this.isOccluded){return}this.tree.planet.RemoveFromDeletedMeshes(this.name);var positions=new Float32Array(this.tree.planet.patchSize*this.tree.planet.patchSize*6*3);var normals=new Float32Array(this.tree.planet.patchSize*this.tree.planet.patchSize*6*3);var uvs=new Float32Array(this.tree.planet.patchSize*this.tree.planet.patchSize*6*2);var positionCount=0;var uvsCount=0;var patchSize=this.tree.planet.patchSize;for(var u=0;u<patchSize;u++){for(var v=0;v<patchSize;v++){position=this.SolvePoint(u/patchSize,v/patchSize);positions[positionCount++]=position.x;normals[positionCount-1]=positions[positionCount-1];positions[positionCount++]=position.y;normals[positionCount-1]=positions[positionCount-1];positions[positionCount++]=position.z;normals[positionCount-1]=positions[positionCount-1];uvs[uvsCount++]=u/patchSize;uvs[uvsCount++]=v/patchSize;position=this.SolvePoint((u+1)/patchSize,v/patchSize);positions[positionCount++]=position.x;positions[positionCount++]=position.y;positions[positionCount++]=position.z;uvs[uvsCount++]=(u+1)/patchSize;uvs[uvsCount++]=v/patchSize;position=this.SolvePoint(u/patchSize,(v+1)/patchSize);positions[positionCount++]=position.x;positions[positionCount++]=position.y;positions[positionCount++]=position.z;uvs[uvsCount++]=u/patchSize;uvs[uvsCount++]=(v+1)/patchSize;positions[positionCount++]=positions[positionCount-4];positions[positionCount++]=positions[positionCount-4];positions[positionCount++]=positions[positionCount-4];uvs[uvsCount++]=u/patchSize;uvs[uvsCount++]=(v+1)/patchSize;positions[positionCount++]=positions[positionCount-10];positions[positionCount++]=positions[positionCount-10];positions[positionCount++]=positions[positionCount-10];uvs[uvsCount++]=(u+1)/patchSize;uvs[uvsCount++]=v/patchSize;position=this.SolvePoint((u+1)/patchSize,(v+1)/patchSize);positions[positionCount++]=position.x;positions[positionCount++]=position.y;positions[positionCount++]=position.z;uvs[uvsCount++]=(u+1)/patchSize;uvs[uvsCount++]=(v+1)/patchSize}}this.tree.planet.meshesToAdd.push(positions.buffer);this.tree.planet.meshesToAdd.push(normals.buffer);this.tree.planet.meshesToAdd.push(uvs.buffer);this.tree.planet.returnObject.newMeshes.push({name:this.name,width:this.width,center:this.center,positions:positions,uvs:uvs});this.isDrawn=true}}(),SolvePoint:function(){var x,y,z,length;return function(u,v){"use strict";x=(this.tree.widthDir.x*u+this.tree.heightDir.x*v)*this.width+this.position.x;y=(this.tree.widthDir.y*u+this.tree.heightDir.y*v)*this.width+this.position.y;z=(this.tree.widthDir.z*u+this.tree.heightDir.z*v)*this.width+this.position.z;length=Math.sqrt(x*x+y*y+z*z);x=x/length*this.tree.planet.radius-this.center.x;y=y/length*this.tree.planet.radius-this.center.y;z=z/length*this.tree.planet.radius-this.center.z;return{x:x,y:y,z:z}}}(),UnDraw:function(){this.tree.planet.returnObject.deletedMeshes.push(this.name);this.isDrawn=false},GetDistanceFromCamera:function(){return function(){this.distance=this.tree.planet.localCameraPosition.distanceTo(this.center)}}(),ShouldSplit:function(){this.tree.planet.log(this.level+" < "+this.tree.planet.maxLevel);return this.level<this.tree.planet.maxLevel&&this.tree.planet.splitTable[this.level]>=this.distance},ShouldUnSplit:function(){return this.level>=0&&this.tree.planet.splitTable[this.level]<this.distance},InCameraFrustum:function(){return true},OccludedByHorizon:function(){var angleToCamera=this.tree.planet.localCameraPlanetProjectionPosition.angleTo(this.center);angleToCamera-=this.arcLength;if(angleToCamera>this.tree.planet.localCameraMaxAngle){return true}return false},Split:function(){var options;return function(){if(this.isSplit){return}options={level:this.level+1,parent:this,tree:this.tree};options.position=this.position.clone().add(this.tree.heightDir.clone().multiplyScalar(this.halfWidth));this.topLeftChild=new THREE.TreeNode(options);options.position=this.position.clone().add(this.tree.heightDir.clone().multiplyScalar(this.halfWidth));options.position.add(this.tree.widthDir.clone().multiplyScalar(this.halfWidth));this.topRightChild=new THREE.TreeNode(options);options.position=this.position.clone();this.bottomLeftChild=new THREE.TreeNode(options);options.position=this.position.clone().add(this.tree.widthDir.clone().multiplyScalar(this.halfWidth));this.bottomRightChild=new THREE.TreeNode(options);this.isSplit=true}}(),Die:function(){if(this.isDrawn){this.UnDraw()}else if(this.isSplit){this.UnSplit()}},UnSplit:function(){if(this.isSplit){this.topLeftChild.Die();this.topRightChild.Die();this.bottomLeftChild.Die();this.bottomRightChild.Die();delete this.topLeftChild;delete this.topRightChild;delete this.bottomLeftChild;delete this.bottomRightChild}this.isSplit=false},updateChildren:function(){this.topLeftChild.update();this.topRightChild.update();this.bottomLeftChild.update();this.bottomRightChild.update()},FindCenter:function(){var x,y,z,w,wd,hd;return function(){x=this.position.x;y=this.position.y;z=this.position.z;wd=this.tree.widthDir;hd=this.tree.heightDir;w=this.halfWidth;x=x+wd.x*w+hd.x*w;y=y+wd.y*w+hd.y*w;z=z+wd.z*w+hd.z*w;return new THREE.Vector3(x,y,z).normalize().multiplyScalar(this.tree.planet.radius)}}()};THREE.QuadTree=function(options){this.name=options.name;this.position=options.corner;this.widthDir=options.widthDir;this.heightDir=options.heightDir;this.planet=options.planet;this.rootNode=new THREE.TreeNode({parent:undefined,level:0,tree:this,position:this.position})};THREE.QuadTree.prototype.update=function(){this.rootNode.update()};THREE.QuadTree.prototype.AssignNeighbors=function(left,top,right,bottom){this.rootNode.leftNeighbor=left;this.rootNode.topNeighbor=top;this.rootNode.rightNeighbor=right;this.rootNode.bottomNeighbor=bottom};var QuadBuilder=function(){};QuadBuilder.prototype={BuildQuadForGrid:function(){var baseIndex,index0,index1,index2,index3,n=new THREE.Vector3(0,0,1);return function(geo,position,uv,buildTriangles,vertsPerRow,swapOrder){geo.vertices.push(position);geo.faceVertexUvs.push(uv);if(buildTriangles){baseIndex=geo.vertices.length-1;index0=baseIndex;index1=baseIndex-1;index2=baseIndex-vertsPerRow;index3=baseIndex-vertsPerRow-1;if(swapOrder){geo.faces.push(new THREE.Face3(index0,index1,index3,[n,n,n]));geo.faces.push(new THREE.Face3(index0,index3,index2,[n,n,n]))}else{geo.faces.push(new THREE.Face3(index2,index1,index3,[n,n,n]));geo.faces.push(new THREE.Face3(index0,index1,index2,[n,n,n]))}}}}()};var GeometryProvider=function(patchSize){this.patchSize=patchSize;this.widthDir=new THREE.Vector3(1,0,0);this.heightDir=new THREE.Vector3(0,1,0);this.geometries=[];this.quadBuilder=new QuadBuilder;this.CreateGeometries()};GeometryProvider.prototype={CreateGeometries:function(){var geo=new THREE.Geometry;this.CreateGeometry(geo);this.geometries.push(geo)},CreateGeometry:function(geo){var step=1/this.patchSize;for(var y=0;y<=this.patchSize;y++){for(var x=0;x<=this.patchSize;x++){var offset=this.widthDir.clone().multiplyScalar(step).multiplyScalar(x);offset.add(this.heightDir.clone().multiplyScalar(step).multiplyScalar(y));var uv=new THREE.Vector2(x,y);var buildTriangles=x>0&&y>0;var swapOrder=x%2===y%2;swapOrder=true;this.quadBuilder.BuildQuadForGrid(geo,offset,uv,buildTriangles,this.patchSize+1,swapOrder)}}},GetStandardGeometry:function(){return this.geometries[0]}};var QuadTreeSphereWorker=function(){self.onmessage=this.handleMessage.bind(this)};QuadTreeSphereWorker.prototype={handleMessage:function(event){if(event.data.Init){this.Init(event.data.Init)}if(event.data.update){this.update(event.data.update)}},log:function(text){self.postMessage({log:text})},update:function(data){this.log("Worker says update called");this.returnObject={started:data.started,newMeshes:[],deletedMeshes:[]};this.meshesToAdd=[];this.localCameraPosition=new THREE.Vector3(data.localCameraPosition.x,data.localCameraPosition.y,data.localCameraPosition.z);this.localCameraPlanetProjectionPosition=this.localCameraPosition.clone().normalize().multiplyScalar(this.radius);this.cameraHeight=this.localCameraPosition.length()-this.radius;this.localCameraMaxAngle=Math.acos(this.radius/(this.cameraHeight+this.radius));this.cameraHeight=this.cameraHeight>0?this.cameraHeight:this.radius+1;this.quadTrees.forEach(function(tree){tree.rootNode.update()});this.quadTrees.forEach(function(tree){tree.rootNode.checkNeighbors()});this.quadTrees.forEach(function(tree){tree.rootNode.Draw()});self.postMessage(this.returnObject,this.meshesToAdd)},RemoveFromDeletedMeshes:function(name){for(var i=0,length=this.returnObject.deletedMeshes;i<length;i++){if(this.returnObject.deletedMeshes[i]==name){this.returnObject.deletedMeshes.splice(i,1);return}}},Init:function(data){this.log("Worker says Init called");this.radius=data.radius;this.patchSize=data.patchSize;this.fov=data.fov;this.vs=Math.tan(this.fov/data.screenWidth);this.quadTrees=[];this.splitTable=[];this.BuildSplitTable();this.InitQuadTrees();this.AssignNeighbors();self.postMessage({isInitialized:true})},BuildSplitTable:function(){var patchPixelWidth,i=0,patchSize=this.patchSize;while(i<200){patchPixelWidth=Math.PI*this.radius*2/(patchSize*6);this.splitTable[i]=patchPixelWidth/this.vs;patchSize=patchSize*2;if(this.splitTable[i]<3){this.maxLevel=i;break}i++}},InitQuadTrees:function(){var nearCorner=new THREE.Vector3(1,1,1).multiplyScalar(this.radius);var farCorner=nearCorner.clone().multiplyScalar(-1);this.quadTrees.push(new THREE.QuadTree({name:"Bottom",corner:nearCorner,widthDir:new THREE.Vector3(0,0,-1),heightDir:new THREE.Vector3(-1,0,0),planet:this}));this.quadTrees.push(new THREE.QuadTree({name:"Front",corner:nearCorner,widthDir:new THREE.Vector3(-1,0,0),heightDir:new THREE.Vector3(0,-1,0),planet:this}));this.quadTrees.push(new THREE.QuadTree({name:"Left",corner:nearCorner,widthDir:new THREE.Vector3(0,-1,0),heightDir:new THREE.Vector3(0,0,-1),planet:this}));this.quadTrees.push(new THREE.QuadTree({name:"Top",corner:farCorner,widthDir:new THREE.Vector3(1,0,0),heightDir:new THREE.Vector3(0,0,1),planet:this}));this.quadTrees.push(new THREE.QuadTree({name:"Back",corner:farCorner,widthDir:new THREE.Vector3(0,1,0),heightDir:new THREE.Vector3(1,0,0),planet:this}));this.quadTrees.push(new THREE.QuadTree({name:"Right",corner:farCorner,widthDir:new THREE.Vector3(0,0,1),heightDir:new THREE.Vector3(0,1,0),planet:this}))},AssignNeighbors:function(){var bottom=this.quadTrees[0].rootNode;var front=this.quadTrees[1].rootNode;var left=this.quadTrees[2].rootNode;var top=this.quadTrees[3].rootNode;var back=this.quadTrees[4].rootNode;var right=this.quadTrees[5].rootNode;this.quadTrees[0].AssignNeighbors(left,back,right,front);this.quadTrees[1].AssignNeighbors(left,top,right,bottom);this.quadTrees[2].AssignNeighbors(bottom,back,top,front);this.quadTrees[3].AssignNeighbors(right,front,left,back);this.quadTrees[4].AssignNeighbors(top,left,bottom,right);this.quadTrees[5].AssignNeighbors(back,bottom,front,top)}};var worker=new QuadTreeSphereWorker;